-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.activity
(
    activity_id integer NOT NULL,
    start_date date NOT NULL,
    sport_type character varying(35) NOT NULL,
    effort_score_label character varying(15),
    PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.activity_name
(
    activity_id integer NOT NULL,
    name character varying(45),
    PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.activity_details
(
    activity_id integer NOT NULL,
    workout_time_min double precision,
    calories integer,
    average_heartrate double precision,
    avg_lap_time double precision,
    total_elevation_gain double precision,
    max_heartrate integer,
    distance double precision,
    "average_speed_km/h" double precision,
    "max_speed_km/h" double precision,
    average_temp integer,
    pace double precision,
    lap_count integer,
    PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.activity_coordinates
(
    activity_id integer NOT NULL,
    start_lat double precision,
    start_long double precision,
    end_lat double precision,
    end_long double precision,
    PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.activity_scores
(
    activity_id integer NOT NULL,
    distance_score integer NOT NULL,
    workout_time_score integer NOT NULL,
    calorie_score integer NOT NULL,
    total_elevation_gain_score integer NOT NULL,
    average_heartrate_score integer NOT NULL,
    max_heartrate_score integer NOT NULL,
    avg_lap_time_score integer NOT NULL,
    lap_count_score integer NOT NULL,
    avg_speed_score integer NOT NULL,
    max_speed_score integer NOT NULL,
    pace_score integer NOT NULL,
    effort_score integer NOT NULL,
    effort_score_rank integer NOT NULL,
    PRIMARY KEY (activity_id)
);

ALTER TABLE IF EXISTS public.activity
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_name (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_details (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_coordinates (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_scores (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity_details
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_name (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity_details
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_coordinates (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity_details
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_scores (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.activity_details
    ADD FOREIGN KEY (activity_id)
    REFERENCES public.activity_name (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;